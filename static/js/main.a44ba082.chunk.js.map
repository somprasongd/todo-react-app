{"version":3,"sources":["config/index.js","context/reducer.js","context/actionTypes.js","context/context.js","components/CountTodo.jsx","features/todo/Title.jsx","features/todo/TodoForm.jsx","features/todo/TodoItem.jsx","features/todo/TodoList.jsx","components/Clock.jsx","features/todo/Todo.jsx","features/about/About.jsx","components/NotFound.jsx","components/Header.jsx","App.js","Routes.jsx","serviceWorker.js","index.js"],"names":["config","reducer","state","action","type","Object","objectSpread","todos","concat","toConsumableArray","payload","map","todo","id","filter","AppContext","createContext","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","CountTodo","count","reduce","c","isCompleted","Fragment","Title","className","components_CountTodo","TodoForm","textInput","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","text","wrap","_context","prev","next","preventDefault","length","abrupt","post","sent","stop","_x","_x2","apply","arguments","onSubmit","htmlFor","ref","node","placeholder","TodoItem","handleRemove","delete","handleToggleComplete","_ref2","_callee2","_context2","put","_x3","_x4","style","textDecoration","onClick","TodoList","todo_TodoItem","key","Clock","date","Date","_this2","console","log","timerID","setInterval","tick","prevProps","prevState","clearInterval","toLocaleTimeString","Todo","isShowTime","handleToggleShowtime","react","todo_Title","todo_TodoForm","todo_TodoList","components_Clock","About","href","target","NotFound","Header","react_router_dom","to","App","context_Provider","components_Header","Routes","src_App","react_router","path","component","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_Routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a44ba082.chunk.js","sourcesContent":["export default {\r\n  apiUrl: 'https://5d1ac8b7dd81710014e87e54.mockapi.io/api/todos'\r\n};\r\n","import * as types from './actionTypes';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload]\r\n      };\r\n    case types.UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.id === action.payload.id ? (todo = action.payload) : todo\r\n        )\r\n      };\r\n    case types.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\n","import React, { Component, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport reducer from './reducer';\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport default class Provider extends Component {\r\n  state = {\r\n    todos: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  // Lifecycle method\r\n  async componentDidMount() {\r\n    // Make HTTP reques with Axios\r\n    const res = await axios.get(config.apiUrl);\r\n    // Set state with result\r\n    this.setState({ todos: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = AppContext.Consumer;\r\n","import React from 'react';\r\nimport { Consumer } from '../context';\r\n\r\nconst CountTodo = () => {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { todos } = value;\r\n        const count = todos.reduce((a, c) => a + (c.isCompleted ? 0 : 1), 0);\r\n        return <>{count}</>;\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default CountTodo;\r\n","import React from 'react';\r\nimport CountTodo from '../../components/CountTodo';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <h1 className=\"display-5 mb-2\">\r\n      Todo{' '}\r\n      <span className=\"text-info\">\r\n        (<CountTodo />)\r\n      </span>\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { Consumer } from '../../context';\r\nimport { ADD_TODO } from '../../context/actionTypes';\r\n\r\nconst TodoForm = () => {\r\n  // Input tracker\r\n  let textInput;\r\n\r\n  const handleSubmit = async (e, dispatch) => {\r\n    e.preventDefault();\r\n\r\n    const text = textInput.value;\r\n    if (text.length === 0) return;\r\n\r\n    // Assemble data\r\n    const todo = {\r\n      text,\r\n      isCompleted: false\r\n    };\r\n\r\n    // Update state\r\n    const res = await axios.post(config.apiUrl, todo);\r\n    dispatch({ type: ADD_TODO, payload: res.data });\r\n\r\n    // Clear input value\r\n    textInput.value = '';\r\n  };\r\n\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { dispatch } = value;\r\n        return (\r\n          <form onSubmit={e => handleSubmit(e, dispatch)}>\r\n            <div className=\"form-row align-items-center\">\r\n              <div className=\"col\">\r\n                <label className=\"sr-only\" htmlFor=\"inlineFormInput\">\r\n                  Task\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  ref={node => (textInput = node)}\r\n                  className=\"form-control mb-2\"\r\n                  id=\"inlineFormInput\"\r\n                  placeholder=\"What needs to be done?\"\r\n                />\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button type=\"submit\" className=\"btn btn-primary mb-2\">\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport { Consumer } from '../../context';\r\nimport { DELETE_TODO, UPDATE_TODO } from '../../context/actionTypes';\r\n\r\nconst TodoItem = props => {\r\n  const { todo } = props;\r\n\r\n  // Handle remove\r\n  const handleRemove = async (dispatch, id) => {\r\n    await axios.delete(`${config.apiUrl}/${id}`);\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  // Handle toggle complete\r\n  const handleToggleComplete = async (dispatch, todo) => {\r\n    todo.isCompleted = !todo.isCompleted;\r\n\r\n    // Update data\r\n    await axios.put(`${config.apiUrl}/${todo.id}`, todo);\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: todo\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { dispatch } = value;\r\n        return (\r\n          <li className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\">\r\n            <div\r\n              style={{\r\n                textDecoration: todo.isCompleted ? 'line-through' : null\r\n              }}\r\n              onClick={e => handleToggleComplete(dispatch, todo)}\r\n            >\r\n              {todo.text}\r\n            </div>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={e => handleRemove(dispatch, todo.id)}\r\n            >\r\n              <i className=\"fas fa-minus-circle\" />\r\n            </button>\r\n          </li>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { Consumer } from '../../context';\r\n\r\nconst TodoList = () => {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { todos } = value;\r\n        return (\r\n          <>\r\n            {todos.length === 0 ? (\r\n              <p className=\"text-center\">No task.</p>\r\n            ) : (\r\n              <ul className=\"list-group\">\r\n                {todos.map(todo => (\r\n                  <TodoItem key={todo.id} todo={todo} />\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Clock extends Component {\r\n  state = { date: new Date() };\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount');\r\n\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('componentDidUpdate');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('componentWillUnmount');\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    console.log('tick');\r\n\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('render');\r\n    return (\r\n      <div>\r\n        <h2>Time is {this.state.date.toLocaleTimeString()}.</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Title from './Title';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport Clock from '../../components/Clock';\r\nexport default class Todo extends Component {\r\n  state = {\r\n    isShowTime: false\r\n  };\r\n  handleToggleShowtime = () => {\r\n    this.setState({ isShowTime: !this.state.isShowTime });\r\n  };\r\n\r\n  render() {\r\n    const { isShowTime } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Title />\r\n        <TodoForm />\r\n        <TodoList />\r\n        <div className=\"m-2\">\r\n          {isShowTime && <Clock />}\r\n          <button className=\"btn btn-info\" onClick={this.handleToggleShowtime}>\r\n            {isShowTime ? 'Hide' : 'Show'}\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Page</h1>\r\n\r\n      <blockquote className=\"blockquote\">\r\n        <p className=\"mb-0\">\r\n          Show how to create Todo-list using react -> context api -> hooks\r\n        </p>\r\n        <footer className=\"blockquote-footer\">\r\n          Read more{' '}\r\n          <cite>\r\n            <a\r\n              href=\"https://github.com/somprasongd/todo-react-app\"\r\n              target=\"_blank\"\r\n            >\r\n              <span className=\"text-danger\">On GitHub</span>\r\n            </a>\r\n          </cite>\r\n        </footer>\r\n      </blockquote>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span>\r\n        Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page dose not exist.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport CountTodo from './CountTodo';\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <i className=\"fas fa-tasks\" /> Todo-list React\r\n        </Link>\r\n        <div>\r\n          <div className=\"navbar-nav\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/todos\">\r\n              Todo (<CountTodo />)\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/about\">\r\n              About\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './components/Header';\r\nimport { Provider } from './context';\r\n\r\nconst App = props => {\r\n  return (\r\n    <Provider>\r\n      <Header />\r\n      <main className=\"container mt-3\">{props.children}</main>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Todo from './features/todo/';\r\nimport About from './features/about/';\r\nimport NotFound from './components/NotFound';\r\nimport App from './App';\r\n\r\nconst Routes = () => (\r\n  <App>\r\n    <Switch>\r\n      <Route path=\"/todos\" component={Todo} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Redirect from=\"/\" exact to=\"/todos\" />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </App>\r\n);\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router basename={`${process.env.PUBLIC_URL}`}>\r\n    <Routes />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}